%% function [ss,ss_pool] = mwi_model_ssSPGR_3T1_linear(fa,tr,...
%                                       M0mw,M0iw,M0ew,...
%                                       t1mw,t1iw,t1ew,...
%                                       kmwiw,kmwew,...
%                                       b1)
%
% Input
% --------------
% fa            : flip angles
% tr            : repetition time
% M0mw          : Myelin water signal
% M0iw          : Intra-axonal water signal
% M0ew          : extracellular water signal
% t1mw          : myelin water T1
% t1iw          : intra-axonal water T1
% t1ew          : extracellular water T1
% b1            : factor of B1+ inhomogeneity: true flip angle=1
%
% Output
% --------------
% ss            : total steady-state signal
% ss_pool       : steady-state signal coming from each pool, [mw,iw,ew]
%
% Description: Model based on Dortch et al. 2013 MRM
% A system with 3 compartment can be in two forms:
%     A
%    / \
%   B - C (cyclic)    or A - B - C (linear)
%
% Kwok-shing Chan @ DCCN
% k.chan@donders.ru.nl
% Date created: 15 Feb 2019
% Date last modified: 
%
%% main
function [ss,ss_pool] = mwi_model_ssSPGR_3T1_linear(fa,tr,...
                                      M0a,M0b,M0c,...
                                      t1a,t1b,t1c,...
                                      kba,kbc,kca,kac,...
                                      b1)
% set default values
if nargin < 11
    kac=0;  % A - B - C
end
if nargin < 12
    b1=1;
end

% no. of flip angles
nfa = length(fa);

% compute nominal flip angles
alpha = fa * b1;

% derive the rest of the exchange rates
kab	= (kba    +   kbc) * M0b /M0a - kac;
kcb	= (kba    +   kbc) * M0b /M0c - kca;

% convert T1s to R1s for simplicity
R1a    = 1/t1a;
R1b    = 1/t1b;
R1c    = 1/t1c;

%%% Relaxation-exchange matrix for Longitudinal components
Lambda_L = [-R1a-kab-kac   , kba         , kca         ;
            kab               , -R1b-kiwmw   , 0             ;
            kmwew               , 0             , -R1c-kewmw  ];
        
Xi_L = expm(tr*Lambda_L);

% Use same notation as paper
C_L = [R1mw*M0mw; R1iw*M0iw; R1ew*M0ew];
I = eye(length(C_L));
    
ss_pool = zeros(length(C_L),nfa);
ss = zeros(1,nfa);
for kfa = 1:length(fa)
    
    % Use same notation as paper
    T = cosd(alpha(kfa))*I;
    
    % Spencer and Fishbein J. Magn. Reson:142(2000)120-135
    ss_pool(:,kfa) = sind(alpha(kfa))* ((I-Xi_L*T) \ (Xi_L - I)) * (Lambda_L \ C_L);
    
    ss(kfa) = ones(1,length(C_L)) * ss_pool(:,kfa);

end

end
